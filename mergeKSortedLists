/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class comp{
    public:
        bool operator()(const ListNode* a,const ListNode *b){
            return a->val > b->val;
        }
};
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<ListNode*,vector<ListNode*>, comp> pq;
        
        for(auto i:lists){
            if(i)
                pq.push(i);
        }
        
        ListNode* res = new ListNode();
        ListNode* curr = res;
        while(!pq.empty())
        {
            ListNode* temp = pq.top();
            pq.pop();
            
            curr->next = new ListNode(temp->val);
            temp = temp->next;
            curr = curr->next;
            
            if(temp)
                pq.push(temp);
        }
        
        return res->next;
    }
};